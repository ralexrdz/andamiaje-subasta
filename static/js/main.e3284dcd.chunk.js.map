{"version":3,"sources":["components/Participants.js","components/Lot.js","components/Lots.js","components/Auction.js","App.js","serviceWorker.js","index.js"],"names":["Participants","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Pusher","cluster","forceTLS","subscribe","bind","data","console","log","list","document","getElementById","innerHTML","participants","forEach","participant","concat","react_default","a","createElement","id","Component","Activity","lotId","lot","Axios","post","me","then","className","title","onClick","pushTransaction","state","lots","amount","get","setLots","assertThisInitialized","res","_this2","map","components_Lot","key","setState","Auction","showAuction","highestBid","name","value","axios","delete","src_components_Participants","leaveAuction","components_Lots","type","placeholder","joinAuction","App","src_components_Auction","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3284dcd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Pusher from 'pusher-js'\n\nimport './Participants.css';\n\n\nclass Participants extends Component {\n  constructor (props) {\n    super(props)\n\n    var pusher = new Pusher('a8ee0fa5cc66b88f3a48', {\n      cluster: 'us2',\n      forceTLS: true\n    });\n      \n    var channel = pusher.subscribe('my-channel');\n    channel.bind('participants-updated', function(data) {\n      console.log('participants', data)\n      let list = document.getElementById('participants')\n      console.log(list)\n      if (list) {\n        console.log(list)\n        list.innerHTML = ''\n        data.participants.forEach(participant => {\n          console.log(participant)\n          list.innerHTML += `<div>${participant}</div>`\n        });\n      }\n    });\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h1>Participantes </h1>\n        <div id=\"participants\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Participants\n","import React, { Component } from 'react'\nimport Pusher from 'pusher-js'\n\nimport './Lot.css';\nimport Axios from 'axios';\n\n\nclass Activity extends Component {\n  constructor (props) {\n    super(props)\n\n    var pusher = new Pusher('a8ee0fa5cc66b88f3a48', {\n      cluster: 'us2',\n      forceTLS: true\n    });\n      \n    var channel = pusher.subscribe('my-channel');\n    channel.bind('new-transaction', function(data) {\n      console.log('pusher new-transaction',data)\n      let list = document.getElementById(data.lotId)\n      list.innerHTML += `<div>${data.participant} is pushing</div>`\n    });\n  }\n  pushTransaction () {\n    console.log(this.props.lot)\n    Axios.post('http://localhost:4000/transactions', {\n      participant: this.props.me,\n      lot: this.props.lot.id\n    }).then(data => {\n      console.log(data)\n    })\n  }\n  render() {\n    return (\n      <div className=\"lot\" id={this.props.lot.id}>\n        <h1>{this.props.lot.title}</h1>\n        <button onClick={this.pushTransaction.bind(this)}>Adquirir</button>\n      </div>\n    )\n  }\n}\n\nexport default Activity\n","import React, { Component } from 'react'\nimport Pusher from 'pusher-js'\n\nimport './Lots.css';\n\nimport Lot from './Lot'\nimport Axios from 'axios';\n\n\nclass Activity extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      lots: []\n    }\n    var pusher = new Pusher('a8ee0fa5cc66b88f3a48', {\n      cluster: 'us2',\n      forceTLS: true\n    });\n    var channel = pusher.subscribe('my-channel');\n    channel.bind('new-transaction', function(data) {\n      console.log(data)\n      let list = document.getElementById('lots')\n      list.innerHTML += `<div>${data.participant} - ${data.amount}</div>`\n    });\n    Axios.get('http://localhost:4000/lots')\n      .then(this.setLots.bind(this))\n  }\n  setLots (res) {\n    console.log(res)\n    let lots = res.data.map(lot => {\n      return <Lot me={this.props.me} lot={lot} key={lot.id}/>\n    })\n    console.log(lots)\n    this.setState({\n      lots\n    })\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h1>Lotss</h1>\n        <div id=\"lots\">\n          {this.state.lots}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Activity\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport './Auction.css';\n\nimport Participants from './Participants'\nimport Lots from './Lots'\n\nclass Auction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAuction: false,\n      highestBid: 0\n    };\n  }\n  joinAuction () {\n    let name = document.getElementById('name').value\n    this.setState({\n      showAuction: true,\n      me: name\n    })\n    axios.post('http://localhost:4000/participants', {\n      participant: name\n    }).then((data) => {\n      console.log('participant posted')\n    })\n  }\n  leaveAuction () {\n    let me = this.state.me \n    this.setState({\n      showAuction: false,\n      me: null\n    })\n    axios.delete(`http://localhost:4000/participants/${me}`)\n    .then((data) => {\n      console.log('bye')\n    })\n  }\n  render() {\n    return (\n      <div id=\"box\">\n        <h2 id=\"winner\"> </h2>\n        <h1>Auctionsss</h1>\n        <Participants/>\n        { this.state.showAuction ?\n          (\n            <div>\n              <div>\n                <button onClick={this.leaveAuction.bind(this)}>Abandonar</button>\n              </div>\n              <Lots me={this.state.me}/>\n            </div>\n          ) : (\n            <div>\n              <input id=\"name\" type=\"text\" placeholder=\"Nombre\"/>\n              <button onClick={this.joinAuction.bind(this)}>Participar</button>\n              <h3>Escribe tu nombre y da click en participar para unirte a la adquisisci√≥n</h3>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default Auction\n","import React, { Component } from 'react';\nimport './App.css';\nimport Auction from './components/Auction'\n\nclass App extends Component {\n  // componentDidMount() {\n  //   console.log('adding event listener for before unload')\n  //   window.addEventListener('beforeunload', this.handleLeavePage);\n  // }\n  \n  // componentWillUnmount() {\n  //   console.log('removing event listener for before unload')\n  //   window.removeEventListener('beforeunload', this.handleLeavePage);\n  // }\n  \n  // handleLeavePage(e) {\n  //   console.log('asking')\n  //   // remove user from connected\n  //   const confirmationMessage = 'Quieres abandonar la subasta?';\n  //   e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+\n  //   return confirmationMessage;              // Gecko, WebKit, Chrome <34\n  // }\n  render() {\n    return (\n      <div className=\"App\">\n        <Auction/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}